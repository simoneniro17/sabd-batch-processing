services:

  # NiFi
  nifi:
    build:
      context: .
      dockerfile: nifi/Dockerfile.nifi
    container_name: nifi
    ports:
      - "8443:8443" # Web UI
      - "1406:1406" # HTTP di Listening
    environment:
      - NIFI_WEB_HTTPS_PORT=8443
      - NIFI_WEB_HTTPS_HOST=0.0.0.0
      - SINGLE_USER_CREDENTIALS_USERNAME=admin
      - SINGLE_USER_CREDENTIALS_PASSWORD=adminpassword
    networks:
      sabd_network:
        ipv4_address: 172.20.0.12
    volumes:        
      - ./hdfs/conf:/opt/hadoop/etc/hadoop
      - ./nifi/conf/ing_and_preproc.xml:/opt/nifi/conf/ing_and_preproc.xml
      - ./nifi/conf/import-template.sh:/opt/nifi/scripts/import-template.sh
    depends_on:
      - namenode


  # HDFS nameNode
  namenode:
    image: apache/hadoop:3.4.1
    container_name: namenode
    hostname: namenode
    user: root
    environment:
      - HADOOP_HOME=/opt/hadoop
    volumes:
      - ./hdfs/namenode:/opt/hadoop/data/nameNode
      - ./hdfs/conf:/opt/hadoop/etc/hadoop
      - ./hdfs/start-hdfs.sh:/start-hdfs.sh
    ports:
      - "9870:9870"
    command: [ "/bin/bash", "/start-hdfs.sh" ]
    networks:
      sabd_network:
        ipv4_address: 172.20.0.2


  # HDFS dataNode1
  datanode1:
    image: apache/hadoop:3.4.1
    container_name: datanode1
    hostname: datanode1
    user: root
    environment:
      - HADOOP_HOME=/opt/hadoop
    volumes:
      - ./hdfs/datanode1:/opt/hadoop/data/dataNode
      - ./hdfs/conf:/opt/hadoop/etc/hadoop
      - ./hdfs/init-datanode.sh:/init-datanode.sh
    depends_on:
      - namenode
    command: [ "/bin/bash", "/init-datanode.sh" ]
    networks:
      sabd_network:
        ipv4_address: 172.20.0.3


  # HDFS dataNode2
  datanode2:
    image: apache/hadoop:3.4.1
    container_name: datanode2
    hostname: datanode2
    user: root
    environment:
      - HADOOP_HOME=/opt/hadoop
    volumes:
      - ./hdfs/datanode2:/opt/hadoop/data/dataNode
      - ./hdfs/conf:/opt/hadoop/etc/hadoop
      - ./hdfs/init-datanode.sh:/init-datanode.sh
    depends_on:
      - namenode
    command: [ "/bin/bash", "/init-datanode.sh" ]
    networks:
      sabd_network:
        ipv4_address: 172.20.0.4


  # Spark master
  spark-master:
    build:
      context: .
      dockerfile: spark/Dockerfile.spark
    container_name: spark-master
    hostname: spark-master
    environment:
      - SPARK_MODE=master
      - HDFS_BASE=hdfs://namenode:9000
    ports:
      - "7077:7077"   
      - "8080:8080"   # Web UI
    volumes:
      - ./hdfs/conf:/opt/hadoop/etc/hadoop  # Per accedere ai file core-site.xml e hdfs-site.xml di HDFS
      - ./spark/app:/app                    # Per i job Spark
      - ./spark/conf/spark-defaults.conf:/opt/spark/conf/spark-defaults.conf
    command: >
      bash -c "/opt/spark/bin/spark-class org.apache.spark.deploy.master.Master --host spark-master"
    networks:
      sabd_network:
        ipv4_address: 172.20.0.15
    depends_on:
      - namenode
      - datanode1
      - datanode2


  # Spark worker
  spark-worker-1:
    build:
      context: .
      dockerfile: spark/Dockerfile.spark
    container_name: spark-worker-1
    hostname: spark-worker-1
    environment:
      - SPARK_MODE=worker
    volumes:
      - ./hdfs/conf:/opt/hadoop/etc/hadoop
      - ./spark/app:/app
    command: >
      bash -c "/opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077"
    networks:
      sabd_network:
        ipv4_address: 172.20.0.16
    depends_on:
      - spark-master

  spark-worker-2:
    build:
      context: .
      dockerfile: spark/Dockerfile.spark
    container_name: spark-worker-2
    hostname: spark-worker-2
    environment:
      - SPARK_MODE=worker
    volumes:
      - ./hdfs/conf:/opt/hadoop/etc/hadoop
      - ./spark/app:/app
    command: >
      bash -c "/opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077"
    networks:
      sabd_network:
        ipv4_address: 172.20.0.17
    depends_on:
      - spark-master


  # Redis
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      sabd_network:
        ipv4_address: 172.20.0.13
    volumes:
      - redis_data:/data


  # Redis Loader
  redis-loader:
    build:
      context: .
      dockerfile: redis/Dockerfile.redis
    container_name: redis-loader
    environment:
      - NAMENODE=http://namenode:9870
    volumes:
      - ./redis/loader:/app
      - ./results:/app/results
    depends_on:
      - redis
      - namenode
    networks:
      sabd_network:
        ipv4_address: 172.20.0.14

  grafana:
    image: grafana/grafana:12.0.0
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./results:/var/lib/grafana/csv
      - grafana_data:/var/lib/grafana         
      - ./grafana/dashboards:/etc/grafana/dashboards         
      - ./grafana/provisioning:/etc/grafana/provisioning  
    environment:
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=yesoreyeram-infinity-datasource
      - GF_INSTALL_PLUGINS=yesoreyeram-infinity-datasource
    networks:
      sabd_network:
        ipv4_address: 172.20.0.20



# Definizione della rete
networks:
  sabd_network:
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis_data:
  grafana_data:    
